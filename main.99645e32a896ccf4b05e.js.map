{"version":3,"file":"main.99645e32a896ccf4b05e.js","mappings":"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","sources":["webpack:///./src/fetchWeather.js","webpack:///./src/components/content.js","webpack:///./src/components/Header.js","webpack:///./src/components/WeatherInfo.js","webpack:///./src/components/InputForm.js","webpack:///./src/components/ForecastCard.js","webpack:///./src/index.js"],"sourcesContent":["export async function fetchWeather(location) {\r\n  const myKey = \"SDNXTATU5JA2W5UHA5L9VTMPG\";\r\n  const url = `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${location}?unitGroup=metric&key=${myKey}&contentType=json`;\r\n\r\n  try {\r\n    const response = await fetch(url);\r\n    if (!response) throw new Error(\"Failed to fetch weather data.\");\r\n\r\n    const data = await response.json();\r\n    console.log(data);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(\"Error fetching weather data:\", error);\r\n    return null;\r\n  }\r\n}\r\n","import { Header } from \"./Header.js\";\r\nimport { InputForm } from \"./InputForm.js\";\r\nimport { WeatherInfo } from \"./WeatherInfo.js\";\r\nimport loadForecast from \"./ForecastCard.js\";\r\nimport { fetchWeather } from \"../fetchWeather.js\";\r\n\r\nexport function loadContent() {\r\n  const content = document.getElementById(\"content\");\r\n  content.textContent = \"\";\r\n\r\n  const appContainer = document.createElement(\"div\");\r\n  appContainer.classList.add(\"weather-app\");\r\n\r\n  appContainer.append(\r\n    Header(),\r\n    WeatherInfo(),\r\n    InputForm(),\r\n    loadForecast(),\r\n    fetchWeather()\r\n  );\r\n\r\n  content.appendChild(appContainer);\r\n}\r\n","export function Header() {\r\n  const header = document.createElement(\"h1\");\r\n  header.classList.add(\"weather-app__title\");\r\n  header.textContent = \"Breeze App\";\r\n\r\n  return header;\r\n}\r\n","export function WeatherInfo() {\r\n  const weatherDiv = document.createElement(\"div\");\r\n  weatherDiv.classList.add(\"weather-app__info\");\r\n  weatherDiv.id = \"weather-info\";\r\n\r\n  return weatherDiv;\r\n}\r\n","import { fetchWeather } from \"../fetchWeather\";\r\nimport { updateForecast } from \"./ForecastCard\";\r\n\r\nexport function InputForm() {\r\n  const container = document.createElement(\"div\");\r\n\r\n  const input = document.createElement(\"input\");\r\n  input.id = \"location\";\r\n  input.classList.add(\"weather-app__input\");\r\n  input.placeholder = \"Enter location\";\r\n\r\n  const button = document.createElement(\"button\");\r\n  button.classList.add(\"weather-app__button\");\r\n  button.textContent = \"Weather\";\r\n  button.addEventListener(\"click\", async () => {\r\n    const location = input.value.trim();\r\n    if (!location) return;\r\n\r\n    const weatherData = await fetchWeather(location);\r\n    if (weatherData) updateForecast(weatherData);\r\n  });\r\n\r\n  container.append(input, button);\r\n  return container;\r\n}\r\n","export default function loadForecast() {\r\n  const forecastDiv = document.createElement(\"div\");\r\n  forecastDiv.classList.add(\"forecast\");\r\n\r\n  const title = document.createElement(\"h2\");\r\n  title.classList.add(\"forecast__title\");\r\n  title.textContent = \"Weekly Forecast\";\r\n\r\n  const container = document.createElement(\"div\");\r\n  container.classList.add(\"forecast__container\");\r\n\r\n  [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"].forEach((day) => {\r\n    const card = document.createElement(\"div\");\r\n    card.classList.add(\"forecast__card\");\r\n    card.id = day.toLowerCase();\r\n\r\n    const cardTitle = document.createElement(\"h3\");\r\n    cardTitle.classList.add(\"forecast__card-title\");\r\n    cardTitle.textContent = day;\r\n\r\n    const tempDiv = document.createElement(\"div\");\r\n    tempDiv.classList.add(\"forecast__card-temp\");\r\n\r\n    const tempC = document.createElement(\"span\");\r\n    tempC.classList.add(\"forecast__card-temp--degrees\");\r\n    tempC.textContent = \"--C\";\r\n\r\n    const icon = document.createElement(\"img\");\r\n    icon.src = \"#\";\r\n    icon.classList.add(\"forecast__card-icon\");\r\n    icon.alt = \"Weather Icon\";\r\n\r\n    const tempF = document.createElement(\"span\");\r\n    tempF.classList.add(\"forecast__card-temp--degrees\");\r\n    tempF.textContent = \"--\";\r\n\r\n    const condition = document.createElement(\"p\");\r\n    condition.classList.add(\"forecast__card-condition\");\r\n    condition.textContent = \"--\";\r\n\r\n    tempDiv.append(tempC, icon, tempF);\r\n    card.append(cardTitle, tempDiv, condition);\r\n    container.appendChild(card);\r\n  });\r\n\r\n  forecastDiv.append(title, container);\r\n\r\n  return forecastDiv;\r\n}\r\n\r\nexport function updateForecast(weatherData) {\r\n  const days = weatherData.days.slice(0, 5);\r\n\r\n  days.forEach((dayData, index) => {\r\n    const dayName = new Date(dayData.datetime)\r\n      .toLocaleDateString(\"en-US\", {\r\n        weekday: \"long\",\r\n      })\r\n      .toLowerCase();\r\n\r\n    const card = document.getElementById(dayName);\r\n    if (!card) return;\r\n\r\n    const tempElements = card.querySelectorAll(\".forecast__card-temp--degrees\");\r\n    const icon = card.querySelector(\".forecast__card-icon\");\r\n    const condition = card.querySelector(\".forecast__card-condition\");\r\n\r\n    if (tempElements.length === 2) {\r\n      tempElements[0].textContent = `${Math.round(dayData.temp)}°C`;\r\n      tempElements[1].textContent = `${Math.round(\r\n        (dayData.temp * 9) / 5 + 32\r\n      )}°F`;\r\n    }\r\n\r\n    if (icon) {\r\n      icon.src = `https://raw.githubusercontent.com/visualcrossing/WeatherIcons/main/PNG/2nd%20Set%20-%20Color/${dayData.icon}.png`;\r\n    }\r\n\r\n    if (condition) {\r\n      condition.textContent = dayData.conditions;\r\n    }\r\n  });\r\n}\r\n","import { loadContent } from \"./components/content\";\r\nimport \"./styles.css\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  loadContent();\r\n});\r\n"],"names":["async","fetchWeather","location","url","response","fetch","Error","data","json","console","log","error","loadContent","content","document","getElementById","textContent","appContainer","createElement","classList","add","append","header","Header","weatherDiv","id","WeatherInfo","container","input","placeholder","button","addEventListener","value","trim","weatherData","days","slice","forEach","dayData","index","dayName","Date","datetime","toLocaleDateString","weekday","toLowerCase","card","tempElements","querySelectorAll","icon","querySelector","condition","length","Math","round","temp","src","conditions","updateForecast","InputForm","forecastDiv","title","day","cardTitle","tempDiv","tempC","alt","tempF","appendChild","loadForecast"],"sourceRoot":""}